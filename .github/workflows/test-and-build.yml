name: Test and Build

on: repository_dispatch

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  buildAndTestForSomePlatforms:
    name: Build for ${{ matrix.targetPlatform }} on version ${{ matrix.unityVersion }}
    if: github.event.action == 'test_and_build'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - project
        unityVersion:
          - 2018.4.13f1
        targetPlatform:
          - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
          #- iOS # Build an iOS player.
          #- WebGL # WebGL.
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/cache@v1 # cache方法用於儲存/還原快取檔，用以加速運行。
        env:
          cache-version: v1
        with:
          path: ${{ matrix.projectPath }}/Library # 這裡我們用來快取Unity的Library資料夾，以防每次重開專案都要花時間建置Library資料夾。
          key: Library-${{ env.cache-version }}-path_${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{ github.workflow }}-${{ hashFiles('**/Packages/manifest.json') }}-${{ hashFiles('**/Assets/**/*.meta') }} 
          # key即identifier，存取時仰賴這組key來取得cache，這裡的key為Library-<cache_version>-<project_path>-<os>-<workflow_name>-<test_mode>-<hash_manifest>-<hash_meta>。
          # <cache_version>用來以防萬一要把key打掉重來時使用，直接更新版號就好
          # <os>是必須完全一致的欄位，如果把其它平台的Library端過來會導致Unity壞掉，它不會自動修正
          # <workflow_name>單純是可有可無的欄位，只是用來區分tester和builder
          # <hash_manifest>用來確認PackageManager有沒有改過，與Library的內容相關
          # <hash_meta>用來確認meta檔有沒有改過，與Library的內容相關
          restore-keys: | # Restore用的備選key，如果hit不到原key會試圖找以下的key
            Library-${{ env.cache-version }}-path_${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{ github.workflow }}-${{ hashFiles('**/Packages/manifest.json') }}-
            Library-${{ env.cache-version }}-path_${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{ github.workflow }}-
            Library-${{ env.cache-version }}-path_${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
      - uses: webbertakken/unity-test-runner@v1.4.1
        id: testRunner
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          customParameters: -buildTarget ${{ matrix.targetPlatform }}
      - uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.targetPlatform }} Test results (all modes)
          path: ${{ steps.testRunner.outputs.artifactsPath }}
      - uses: webbertakken/unity-builder@v0.10
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          #customParameters: "-myParameter myValue -myBoolean -ThirdParameter andItsValue"
      - uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.targetPlatform }} Build
          path: build
      - name: sudo chmod all Library # 以免一些檔案的權限有問題
        run: sudo chmod -R 777 ${{ matrix.projectPath }}/Library
