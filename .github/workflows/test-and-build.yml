name: Test and Build

on: repository_dispatch

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  buildAndTestForSomePlatforms:
    name: Build for ${{ matrix.targetPlatform }} on version ${{ matrix.unityVersion }}
    if: github.event.action == 'test_and_build'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - project
        unityVersion:
          - 2018.4.13f1
        targetPlatform:
          - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
          #- iOS # Build an iOS player.
          #- WebGL # WebGL.
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/cache@v1
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}
      - uses: webbertakken/unity-test-runner@v1.4.1
        id: testRunner
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          customParameters: -buildTarget ${{ matrix.targetPlatform }}
      - uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.targetPlatform }} Test results (all modes)
          path: ${{ steps.testRunner.outputs.artifactsPath }}
      - uses: webbertakken/unity-builder@v0.10
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          #customParameters: "-myParameter myValue -myBoolean -ThirdParameter andItsValue"
      - uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.targetPlatform }} Build
          path: build
      - name: Purging the redundant artifacts.
        run: | # 這個|符號表示多行輸入
          chmod +x ./.github/workflows/purging-artifacts.sh # 改執行權限
          ./.github/workflows/purging-artifacts.sh # 跑寫好的shell
        env: 
          PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }} # 將secerts中的PERSONAL_TOKEN設定為環境變數
          KEEPING_COUNT: 1 # 保存前N新的artifacts 
          OWNER_AND_REPO: ${{ github.repository }} # The string combine owner and repository. For example, Codertocat/Hello-World.
